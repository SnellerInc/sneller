//line parse_duration.rl:1
// Code generated by Ragel. DO NOT EDIT.

package date

//line parse_duration.rl:18

func parseDuration(data []byte) (y, m, d int, ok bool) {
	n, cs, p, pe := 0, 0, 0, len(data)

//line parse_duration.go:15
	const duration_start int = 13
	const duration_first_final int = 13
	const duration_error int = 0

	const duration_en_main int = 13

//line parse_duration.go:23
	{
		cs = duration_start
	}

//line parse_duration.go:28
	{
		if p == pe {
			goto _test_eof
		}
		switch cs {
		case 13:
			goto st_case_13
		case 0:
			goto st_case_0
		case 1:
			goto st_case_1
		case 2:
			goto st_case_2
		case 3:
			goto st_case_3
		case 4:
			goto st_case_4
		case 5:
			goto st_case_5
		case 14:
			goto st_case_14
		case 15:
			goto st_case_15
		case 6:
			goto st_case_6
		case 7:
			goto st_case_7
		case 8:
			goto st_case_8
		case 9:
			goto st_case_9
		case 16:
			goto st_case_16
		case 10:
			goto st_case_10
		case 11:
			goto st_case_11
		case 12:
			goto st_case_12
		}
		goto st_out
	st_case_13:
		if 48 <= data[p] && data[p] <= 57 {
			goto tr13
		}
		goto st0
	st_case_0:
	st0:
		cs = 0
		goto _out
	tr13:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st1
	st1:
		if p++; p == pe {
			goto _test_eof1
		}
	st_case_1:
//line parse_duration.go:91
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		case 121:
			goto tr4
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr0
		}
		goto st0
	tr0:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st2
	st2:
		if p++; p == pe {
			goto _test_eof2
		}
	st_case_2:
//line parse_duration.go:116
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		case 121:
			goto tr4
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr5
		}
		goto st0
	tr5:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st3
	st3:
		if p++; p == pe {
			goto _test_eof3
		}
	st_case_3:
//line parse_duration.go:141
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		case 121:
			goto tr4
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr6
		}
		goto st0
	tr6:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st4
	st4:
		if p++; p == pe {
			goto _test_eof4
		}
	st_case_4:
//line parse_duration.go:166
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr7
		}
		goto st0
	tr7:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st5
	st5:
		if p++; p == pe {
			goto _test_eof5
		}
	st_case_5:
//line parse_duration.go:189
		if data[p] == 100 {
			goto tr2
		}
		goto st0
	tr2:
//line parse_duration.rl:15
		d, n = n, 0
		goto st14
	st14:
		if p++; p == pe {
			goto _test_eof14
		}
	st_case_14:
//line parse_duration.go:203
		goto st0
	tr3:
//line parse_duration.rl:14
		m, n = n, 0
		goto st15
	st15:
		if p++; p == pe {
			goto _test_eof15
		}
	st_case_15:
//line parse_duration.go:214
		if 48 <= data[p] && data[p] <= 57 {
			goto tr14
		}
		goto st0
	tr14:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st6
	st6:
		if p++; p == pe {
			goto _test_eof6
		}
	st_case_6:
//line parse_duration.go:231
		if data[p] == 100 {
			goto tr2
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr8
		}
		goto st0
	tr8:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st7
	st7:
		if p++; p == pe {
			goto _test_eof7
		}
	st_case_7:
//line parse_duration.go:251
		if data[p] == 100 {
			goto tr2
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr9
		}
		goto st0
	tr9:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st8
	st8:
		if p++; p == pe {
			goto _test_eof8
		}
	st_case_8:
//line parse_duration.go:271
		if data[p] == 100 {
			goto tr2
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr10
		}
		goto st0
	tr10:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st9
	st9:
		if p++; p == pe {
			goto _test_eof9
		}
	st_case_9:
//line parse_duration.go:291
		if data[p] == 100 {
			goto tr2
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr7
		}
		goto st0
	tr4:
//line parse_duration.rl:13
		y, n = n, 0
		goto st16
	st16:
		if p++; p == pe {
			goto _test_eof16
		}
	st_case_16:
//line parse_duration.go:308
		if 48 <= data[p] && data[p] <= 57 {
			goto tr15
		}
		goto st0
	tr15:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st10
	st10:
		if p++; p == pe {
			goto _test_eof10
		}
	st_case_10:
//line parse_duration.go:325
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr11
		}
		goto st0
	tr11:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st11
	st11:
		if p++; p == pe {
			goto _test_eof11
		}
	st_case_11:
//line parse_duration.go:348
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr12
		}
		goto st0
	tr12:
//line parse_duration.rl:8

		n *= 10
		n += int(data[p] - '0')

		goto st12
	st12:
		if p++; p == pe {
			goto _test_eof12
		}
	st_case_12:
//line parse_duration.go:371
		switch data[p] {
		case 100:
			goto tr2
		case 109:
			goto tr3
		}
		if 48 <= data[p] && data[p] <= 57 {
			goto tr6
		}
		goto st0
	st_out:
	_test_eof1:
		cs = 1
		goto _test_eof
	_test_eof2:
		cs = 2
		goto _test_eof
	_test_eof3:
		cs = 3
		goto _test_eof
	_test_eof4:
		cs = 4
		goto _test_eof
	_test_eof5:
		cs = 5
		goto _test_eof
	_test_eof14:
		cs = 14
		goto _test_eof
	_test_eof15:
		cs = 15
		goto _test_eof
	_test_eof6:
		cs = 6
		goto _test_eof
	_test_eof7:
		cs = 7
		goto _test_eof
	_test_eof8:
		cs = 8
		goto _test_eof
	_test_eof9:
		cs = 9
		goto _test_eof
	_test_eof16:
		cs = 16
		goto _test_eof
	_test_eof10:
		cs = 10
		goto _test_eof
	_test_eof11:
		cs = 11
		goto _test_eof
	_test_eof12:
		cs = 12
		goto _test_eof

	_test_eof:
		{
		}
	_out:
		{
		}
	}

//line parse_duration.rl:26

	ok = cs >= duration_first_final
	return
}
