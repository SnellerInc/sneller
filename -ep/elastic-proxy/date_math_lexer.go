//line date_math_lexer.rl:1
// Copyright (C) 2022 Sneller, Inc.
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by Ragel. DO NOT EDIT.

package elastic_proxy

import (
	"fmt"
	"strconv"
	"time"
)

//line date_math_lexer.go:29
const datemathlexer_start int = 1
const datemathlexer_first_final int = 37
const datemathlexer_error int = 0

const datemathlexer_en_main int = 1

//line date_math_lexer.rl:32

type dateMathLexer struct {
	data      []byte
	p, pe, cs int
	ts        int

	now    time.Time
	t      time.Time
	number int
}

func (l dateMathLexer) string() string {
	return string(l.data[l.ts:l.p])
}

func ParseDateMath(data string, now time.Time) (time.Time, error) {
	lex := &dateMathLexer{
		data: []byte(data),
		pe:   len(data),
		now:  now,
	}

	eof := len(data)
	var result time.Time

//line date_math_lexer.rl:75

//line date_math_lexer.go:68
	{
		lex.cs = datemathlexer_start
	}

//line date_math_lexer.rl:78

//line date_math_lexer.go:75
	{
		if (lex.p) == (lex.pe) {
			goto _test_eof
		}
		switch lex.cs {
		case 1:
			goto st_case_1
		case 0:
			goto st_case_0
		case 2:
			goto st_case_2
		case 3:
			goto st_case_3
		case 4:
			goto st_case_4
		case 5:
			goto st_case_5
		case 6:
			goto st_case_6
		case 7:
			goto st_case_7
		case 8:
			goto st_case_8
		case 9:
			goto st_case_9
		case 10:
			goto st_case_10
		case 11:
			goto st_case_11
		case 12:
			goto st_case_12
		case 13:
			goto st_case_13
		case 14:
			goto st_case_14
		case 15:
			goto st_case_15
		case 16:
			goto st_case_16
		case 17:
			goto st_case_17
		case 18:
			goto st_case_18
		case 19:
			goto st_case_19
		case 20:
			goto st_case_20
		case 21:
			goto st_case_21
		case 22:
			goto st_case_22
		case 23:
			goto st_case_23
		case 24:
			goto st_case_24
		case 25:
			goto st_case_25
		case 26:
			goto st_case_26
		case 27:
			goto st_case_27
		case 28:
			goto st_case_28
		case 37:
			goto st_case_37
		case 29:
			goto st_case_29
		case 30:
			goto st_case_30
		case 38:
			goto st_case_38
		case 31:
			goto st_case_31
		case 39:
			goto st_case_39
		case 32:
			goto st_case_32
		case 33:
			goto st_case_33
		case 34:
			goto st_case_34
		case 35:
			goto st_case_35
		case 36:
			goto st_case_36
		case 40:
			goto st_case_40
		}
		goto st_out
	st_case_1:
		if lex.data[(lex.p)] == 110 {
			goto st35
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr0
		}
		goto st0
	st_case_0:
	st0:
		lex.cs = 0
		goto _out
	tr0:
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st2
	st2:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof2
		}
	st_case_2:
//line date_math_lexer.go:186
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st3
		}
		goto st0
	st3:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof3
		}
	st_case_3:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st4
		}
		goto st0
	st4:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof4
		}
	st_case_4:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st5
		}
		goto st0
	st5:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof5
		}
	st_case_5:
		if 45 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 46 {
			goto st6
		}
		goto st0
	st6:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof6
		}
	st_case_6:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st7
		}
		goto st0
	st7:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof7
		}
	st_case_7:
		switch {
		case lex.data[(lex.p)] > 46:
			if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
				goto st34
			}
		case lex.data[(lex.p)] >= 45:
			goto st8
		}
		goto st0
	st8:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof8
		}
	st_case_8:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st9
		}
		goto st0
	st9:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof9
		}
	st_case_9:
		switch lex.data[(lex.p)] {
		case 32:
			goto tr11
		case 84:
			goto tr11
		case 124:
			goto tr13
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st33
		}
		goto st0
	tr11:
//line date_math_lexer.rl:60
		lex.t = parseDate(lex.string())
		goto st10
	st10:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof10
		}
	st_case_10:
//line date_math_lexer.go:276
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr14
		}
		goto st0
	tr14:
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st11
	st11:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof11
		}
	st_case_11:
//line date_math_lexer.go:290
		if lex.data[(lex.p)] == 58 {
			goto st13
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st12
		}
		goto st0
	st12:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof12
		}
	st_case_12:
		if lex.data[(lex.p)] == 58 {
			goto st13
		}
		goto st0
	st13:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof13
		}
	st_case_13:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st14
		}
		goto st0
	st14:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof14
		}
	st_case_14:
		switch lex.data[(lex.p)] {
		case 58:
			goto st16
		case 124:
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st15
		}
		goto st0
	st15:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof15
		}
	st_case_15:
		switch lex.data[(lex.p)] {
		case 58:
			goto st16
		case 124:
			goto tr20
		}
		goto st0
	st16:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof16
		}
	st_case_16:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st17
		}
		goto st0
	st17:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof17
		}
	st_case_17:
		switch lex.data[(lex.p)] {
		case 46:
			goto st18
		case 124:
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st32
		}
		goto st0
	st18:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof18
		}
	st_case_18:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st19
		}
		goto st0
	st19:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof19
		}
	st_case_19:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st20
		}
		goto st0
	st20:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof20
		}
	st_case_20:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st21
		}
		goto st0
	st21:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof21
		}
	st_case_21:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st22
		}
		goto st0
	st22:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof22
		}
	st_case_22:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st23
		}
		goto st0
	st23:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof23
		}
	st_case_23:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st24
		}
		goto st0
	st24:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof24
		}
	st_case_24:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st25
		}
		goto st0
	st25:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof25
		}
	st_case_25:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st26
		}
		goto st0
	st26:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof26
		}
	st_case_26:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st27
		}
		goto st0
	st27:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof27
		}
	st_case_27:
		if lex.data[(lex.p)] == 124 {
			goto tr20
		}
		goto st0
	tr13:
//line date_math_lexer.rl:60
		lex.t = parseDate(lex.string())
		goto st28
	tr20:
//line date_math_lexer.rl:61
		lex.t = addTime(lex.t, lex.string())
		goto st28
	st28:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof28
		}
	st_case_28:
//line date_math_lexer.go:494
		if lex.data[(lex.p)] == 124 {
			goto st37
		}
		goto st0
	st37:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof37
		}
	st_case_37:
		switch lex.data[(lex.p)] {
		case 43:
			goto tr39
		case 45:
			goto tr39
		case 47:
			goto st31
		}
		goto st0
	tr39:
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st29
	tr41:
//line date_math_lexer.rl:63
		lex.t = adjust(lex.t, lex.number, lex.string())
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st29
	tr43:
//line date_math_lexer.rl:64
		lex.t = round(lex.t, lex.string())
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st29
	tr45:
//line date_math_lexer.rl:59
		lex.t = lex.now
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st29
	st29:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof29
		}
	st_case_29:
//line date_math_lexer.go:540
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st30
		}
		goto st0
	st30:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof30
		}
	st_case_30:
		switch lex.data[(lex.p)] {
		case 72:
			goto tr35
		case 77:
			goto tr35
		case 100:
			goto tr35
		case 104:
			goto tr35
		case 109:
			goto tr35
		case 115:
			goto tr35
		case 119:
			goto tr35
		case 121:
			goto tr35
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st30
		}
		goto st0
	tr35:
//line date_math_lexer.rl:62
		lex.number, _ = strconv.Atoi(lex.string())
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st38
	st38:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof38
		}
	st_case_38:
//line date_math_lexer.go:583
		switch lex.data[(lex.p)] {
		case 43:
			goto tr41
		case 45:
			goto tr41
		case 47:
			goto tr42
		}
		goto st0
	tr42:
//line date_math_lexer.rl:63
		lex.t = adjust(lex.t, lex.number, lex.string())
		goto st31
	tr44:
//line date_math_lexer.rl:64
		lex.t = round(lex.t, lex.string())
		goto st31
	tr46:
//line date_math_lexer.rl:59
		lex.t = lex.now
		goto st31
	st31:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof31
		}
	st_case_31:
//line date_math_lexer.go:610
		switch lex.data[(lex.p)] {
		case 72:
			goto tr36
		case 77:
			goto tr36
		case 100:
			goto tr36
		case 104:
			goto tr36
		case 109:
			goto tr36
		case 115:
			goto tr36
		case 119:
			goto tr36
		case 121:
			goto tr36
		}
		goto st0
	tr36:
//line date_math_lexer.rl:58
		lex.ts = lex.p
		goto st39
	st39:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof39
		}
	st_case_39:
//line date_math_lexer.go:639
		switch lex.data[(lex.p)] {
		case 43:
			goto tr43
		case 45:
			goto tr43
		case 47:
			goto tr44
		}
		goto st0
	st32:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof32
		}
	st_case_32:
		switch lex.data[(lex.p)] {
		case 46:
			goto st18
		case 124:
			goto tr20
		}
		goto st0
	st33:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof33
		}
	st_case_33:
		switch lex.data[(lex.p)] {
		case 32:
			goto tr11
		case 84:
			goto tr11
		case 124:
			goto tr13
		}
		goto st0
	st34:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof34
		}
	st_case_34:
		if 45 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 46 {
			goto st8
		}
		goto st0
	st35:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof35
		}
	st_case_35:
		if lex.data[(lex.p)] == 111 {
			goto st36
		}
		goto st0
	st36:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof36
		}
	st_case_36:
		if lex.data[(lex.p)] == 119 {
			goto st40
		}
		goto st0
	st40:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof40
		}
	st_case_40:
		switch lex.data[(lex.p)] {
		case 43:
			goto tr45
		case 45:
			goto tr45
		case 47:
			goto tr46
		}
		goto st0
	st_out:
	_test_eof2:
		lex.cs = 2
		goto _test_eof
	_test_eof3:
		lex.cs = 3
		goto _test_eof
	_test_eof4:
		lex.cs = 4
		goto _test_eof
	_test_eof5:
		lex.cs = 5
		goto _test_eof
	_test_eof6:
		lex.cs = 6
		goto _test_eof
	_test_eof7:
		lex.cs = 7
		goto _test_eof
	_test_eof8:
		lex.cs = 8
		goto _test_eof
	_test_eof9:
		lex.cs = 9
		goto _test_eof
	_test_eof10:
		lex.cs = 10
		goto _test_eof
	_test_eof11:
		lex.cs = 11
		goto _test_eof
	_test_eof12:
		lex.cs = 12
		goto _test_eof
	_test_eof13:
		lex.cs = 13
		goto _test_eof
	_test_eof14:
		lex.cs = 14
		goto _test_eof
	_test_eof15:
		lex.cs = 15
		goto _test_eof
	_test_eof16:
		lex.cs = 16
		goto _test_eof
	_test_eof17:
		lex.cs = 17
		goto _test_eof
	_test_eof18:
		lex.cs = 18
		goto _test_eof
	_test_eof19:
		lex.cs = 19
		goto _test_eof
	_test_eof20:
		lex.cs = 20
		goto _test_eof
	_test_eof21:
		lex.cs = 21
		goto _test_eof
	_test_eof22:
		lex.cs = 22
		goto _test_eof
	_test_eof23:
		lex.cs = 23
		goto _test_eof
	_test_eof24:
		lex.cs = 24
		goto _test_eof
	_test_eof25:
		lex.cs = 25
		goto _test_eof
	_test_eof26:
		lex.cs = 26
		goto _test_eof
	_test_eof27:
		lex.cs = 27
		goto _test_eof
	_test_eof28:
		lex.cs = 28
		goto _test_eof
	_test_eof37:
		lex.cs = 37
		goto _test_eof
	_test_eof29:
		lex.cs = 29
		goto _test_eof
	_test_eof30:
		lex.cs = 30
		goto _test_eof
	_test_eof38:
		lex.cs = 38
		goto _test_eof
	_test_eof31:
		lex.cs = 31
		goto _test_eof
	_test_eof39:
		lex.cs = 39
		goto _test_eof
	_test_eof32:
		lex.cs = 32
		goto _test_eof
	_test_eof33:
		lex.cs = 33
		goto _test_eof
	_test_eof34:
		lex.cs = 34
		goto _test_eof
	_test_eof35:
		lex.cs = 35
		goto _test_eof
	_test_eof36:
		lex.cs = 36
		goto _test_eof
	_test_eof40:
		lex.cs = 40
		goto _test_eof

	_test_eof:
		{
		}
		if (lex.p) == eof {
			switch lex.cs {
			case 37:
//line date_math_lexer.rl:74
				result = lex.t
			case 40:
//line date_math_lexer.rl:59
				lex.t = lex.now
//line date_math_lexer.rl:74
				result = lex.t
			case 38:
//line date_math_lexer.rl:63
				lex.t = adjust(lex.t, lex.number, lex.string())
//line date_math_lexer.rl:74
				result = lex.t
			case 39:
//line date_math_lexer.rl:64
				lex.t = round(lex.t, lex.string())
//line date_math_lexer.rl:74
				result = lex.t
//line date_math_lexer.go:778
			}
		}

	_out:
		{
		}
	}

//line date_math_lexer.rl:79

	if lex.p != eof {
		return result, fmt.Errorf("invalid format %q", string(lex.data))
	}
	return result, nil
}
