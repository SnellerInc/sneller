//line qs_lexer.rl:1
// Copyright (C) 2022 Sneller, Inc.
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by Ragel. DO NOT EDIT.

package elastic_proxy

import (
	"fmt"
	"strconv"
	"strings"
)

//line qs_lexer.go:29
const querystring_start int = 10
const querystring_first_final int = 10
const querystring_error int = 0

const querystring_en_main int = 10

//line qs_lexer.rl:32

type queryStringLexer struct {
	data        []byte
	p, pe, cs   int
	ts, te, act int

	defaultOperator string
	result          qsExpression
}

func newQueryStringLexer(data []byte) *queryStringLexer {
	lex := &queryStringLexer{
		data:            data,
		pe:              len(data),
		defaultOperator: "OR",
	}

//line qs_lexer.go:56
	{
		lex.cs = querystring_start
		lex.ts = 0
		lex.te = 0
		lex.act = 0
	}

//line qs_lexer.rl:50
	return lex
}

func (lex *queryStringLexer) Lex(out *yySymType) int {
	eof := lex.pe
	tok := 0

//line qs_lexer.go:72
	{
		if (lex.p) == (lex.pe) {
			goto _test_eof
		}
		switch lex.cs {
		case 10:
			goto st_case_10
		case 11:
			goto st_case_11
		case 1:
			goto st_case_1
		case 12:
			goto st_case_12
		case 13:
			goto st_case_13
		case 2:
			goto st_case_2
		case 3:
			goto st_case_3
		case 14:
			goto st_case_14
		case 4:
			goto st_case_4
		case 0:
			goto st_case_0
		case 15:
			goto st_case_15
		case 5:
			goto st_case_5
		case 16:
			goto st_case_16
		case 6:
			goto st_case_6
		case 7:
			goto st_case_7
		case 17:
			goto st_case_17
		case 18:
			goto st_case_18
		case 19:
			goto st_case_19
		case 20:
			goto st_case_20
		case 21:
			goto st_case_21
		case 22:
			goto st_case_22
		case 23:
			goto st_case_23
		case 24:
			goto st_case_24
		case 25:
			goto st_case_25
		case 26:
			goto st_case_26
		case 27:
			goto st_case_27
		case 28:
			goto st_case_28
		case 29:
			goto st_case_29
		case 30:
			goto st_case_30
		case 31:
			goto st_case_31
		case 8:
			goto st_case_8
		case 9:
			goto st_case_9
		case 32:
			goto st_case_32
		case 33:
			goto st_case_33
		case 34:
			goto st_case_34
		case 35:
			goto st_case_35
		case 36:
			goto st_case_36
		case 37:
			goto st_case_37
		case 38:
			goto st_case_38
		case 39:
			goto st_case_39
		case 40:
			goto st_case_40
		case 41:
			goto st_case_41
		case 42:
			goto st_case_42
		case 43:
			goto st_case_43
		case 44:
			goto st_case_44
		case 45:
			goto st_case_45
		case 46:
			goto st_case_46
		case 47:
			goto st_case_47
		case 48:
			goto st_case_48
		case 49:
			goto st_case_49
		}
		goto st_out
	tr0:
//line NONE:1
		switch lex.act {
		case 0:
			{
				{
					goto st0
				}
			}
		case 1:
			{
				(lex.p) = (lex.te) - 1
				tok = tokAnd
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 2:
			{
				(lex.p) = (lex.te) - 1
				tok = tokOr
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 3:
			{
				(lex.p) = (lex.te) - 1
				tok = tokNot
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 4:
			{
				(lex.p) = (lex.te) - 1
				tok = tokTo
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 5:
			{
				(lex.p) = (lex.te) - 1
				tok = tokExists
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 13:
			{
				(lex.p) = (lex.te) - 1
				tok = '+'
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 14:
			{
				(lex.p) = (lex.te) - 1
				tok = '-'
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 16:
			{
				(lex.p) = (lex.te) - 1
				tok = '.'
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 18:
			{
				(lex.p) = (lex.te) - 1

				tok, out.text = tokOperator, lex.token()
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 19:
			{
				(lex.p) = (lex.te) - 1

				tok = tokBoost
				out.numFloat, _ = strconv.ParseFloat(lex.tokenStripped(1, 0), 64)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 21:
			{
				(lex.p) = (lex.te) - 1

				tok = tokFloat
				out.numFloat, _ = strconv.ParseFloat(lex.token(), 64)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 22:
			{
				(lex.p) = (lex.te) - 1

				tok = tokInt
				out.numInt, _ = strconv.ParseInt(lex.token(), 10, 64)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 23:
			{
				(lex.p) = (lex.te) - 1

				tok = tokBool
				out.boolean = true
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 24:
			{
				(lex.p) = (lex.te) - 1

				tok = tokBool
				out.boolean = false
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 25:
			{
				(lex.p) = (lex.te) - 1

				tok, out.text = tokAlpha, strings.ReplaceAll(lex.token(), `\`, ``)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 26:
			{
				(lex.p) = (lex.te) - 1

				tok, out.text = tokAlphaQuoted, lex.tokenStripped(1, 1)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		case 27:
			{
				(lex.p) = (lex.te) - 1

				tok, out.text = tokAlphaRegex, lex.tokenStripped(1, 1)
				{
					(lex.p)++
					lex.cs = 10
					goto _out
				}
			}
		}

		goto st10
	tr5:
//line qs_lexer.rl:147
		lex.te = (lex.p) + 1
		{
			tok, out.text = tokAlphaQuoted, lex.tokenStripped(1, 1)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr8:
//line qs_lexer.rl:63
		lex.te = (lex.p) + 1
		{
			tok = tokAnd
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr12:
//line qs_lexer.rl:155
		lex.te = (lex.p) + 1
		{
			tok, out.text = tokAlphaRegex, lex.tokenStripped(1, 1)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr18:
//line qs_lexer.rl:87
		lex.te = (lex.p) + 1
		{
		}
		goto st10
	tr19:
//line qs_lexer.rl:65
		lex.te = (lex.p) + 1
		{
			tok = tokNot
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr21:
//line qs_lexer.rl:76
		lex.te = (lex.p) + 1
		{
			tok = '('
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr22:
//line qs_lexer.rl:77
		lex.te = (lex.p) + 1
		{
			tok = ')'
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr27:
//line qs_lexer.rl:83
		lex.te = (lex.p) + 1
		{
			tok = ':'
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr35:
//line qs_lexer.rl:70
		lex.te = (lex.p) + 1
		{
			tok, out.incl = tokRangeStart, true
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr37:
//line qs_lexer.rl:71
		lex.te = (lex.p) + 1
		{
			tok, out.incl = tokRangeEnd, true
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr42:
//line qs_lexer.rl:72
		lex.te = (lex.p) + 1
		{
			tok, out.incl = tokRangeStart, false
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr44:
//line qs_lexer.rl:73
		lex.te = (lex.p) + 1
		{
			tok, out.incl = tokRangeEnd, false
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr46:
//line qs_lexer.rl:141
		lex.te = (lex.p)
		(lex.p)--
		{
			tok, out.text = tokAlpha, strings.ReplaceAll(lex.token(), `\`, ``)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr47:
//line qs_lexer.rl:147
		lex.te = (lex.p)
		(lex.p)--
		{
			tok, out.text = tokAlphaQuoted, lex.tokenStripped(1, 1)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr50:
//line qs_lexer.rl:155
		lex.te = (lex.p)
		(lex.p)--
		{
			tok, out.text = tokAlphaRegex, lex.tokenStripped(1, 1)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr51:
//line qs_lexer.rl:122
		lex.te = (lex.p)
		(lex.p)--
		{
			tok = tokInt
			out.numInt, _ = strconv.ParseInt(lex.token(), 10, 64)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr52:
//line qs_lexer.rl:90
		lex.te = (lex.p)
		(lex.p)--
		{
			tok, out.text = tokOperator, lex.token()
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr53:
//line qs_lexer.rl:90
		lex.te = (lex.p) + 1
		{
			tok, out.text = tokOperator, lex.token()
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr67:
//line qs_lexer.rl:96
		lex.te = (lex.p)
		(lex.p)--
		{
			tok = tokBoost
			out.numFloat, _ = strconv.ParseFloat(lex.tokenStripped(1, 0), 64)
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr80:
//line qs_lexer.rl:80
		lex.te = (lex.p)
		(lex.p)--
		{
			tok = '|'
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr81:
//line qs_lexer.rl:64
		lex.te = (lex.p) + 1
		{
			tok = tokOr
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	tr82:
//line qs_lexer.rl:103
		lex.te = (lex.p)
		(lex.p)--
		{
			fuzzy := lex.tokenStripped(1, 0)
			if fuzzy == "" {
				out.numFloat = -1
			} else {
				out.numFloat, _ = strconv.ParseFloat(fuzzy, 64)
			}
			tok = tokFuzzy
			{
				(lex.p)++
				lex.cs = 10
				goto _out
			}
		}
		goto st10
	st10:
//line NONE:1
		lex.ts = 0

//line NONE:1
		lex.act = 0

		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof10
		}
	st_case_10:
//line NONE:1
		lex.ts = (lex.p)

//line qs_lexer.go:441
		switch lex.data[(lex.p)] {
		case 32:
			goto tr18
		case 33:
			goto tr19
		case 34:
			goto st2
		case 38:
			goto st4
		case 40:
			goto tr21
		case 41:
			goto tr22
		case 43:
			goto tr23
		case 45:
			goto tr24
		case 46:
			goto tr25
		case 47:
			goto st6
		case 58:
			goto tr27
		case 61:
			goto tr29
		case 65:
			goto tr30
		case 70:
			goto tr31
		case 78:
			goto tr32
		case 79:
			goto tr33
		case 84:
			goto tr34
		case 91:
			goto tr35
		case 92:
			goto st1
		case 93:
			goto tr37
		case 94:
			goto st8
		case 95:
			goto tr39
		case 102:
			goto tr40
		case 116:
			goto tr41
		case 123:
			goto tr42
		case 124:
			goto st48
		case 125:
			goto tr44
		case 126:
			goto st49
		}
		switch {
		case lex.data[(lex.p)] < 48:
			if 9 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 13 {
				goto tr18
			}
		case lex.data[(lex.p)] > 57:
			if 60 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 62 {
				goto st19
			}
		default:
			goto tr26
		}
		goto tr1
	tr1:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st11
	tr29:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:90
		lex.act = 18
		goto st11
	tr55:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:63
		lex.act = 1
		goto st11
	tr59:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:134
		lex.act = 24
		goto st11
	tr61:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:65
		lex.act = 3
		goto st11
	tr62:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:64
		lex.act = 2
		goto st11
	tr63:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:66
		lex.act = 4
		goto st11
	tr66:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:129
		lex.act = 23
		goto st11
	tr74:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:67
		lex.act = 5
		goto st11
	st11:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof11
		}
	st_case_11:
//line qs_lexer.go:581
		switch lex.data[(lex.p)] {
		case 38:
			goto tr0
		case 58:
			goto tr0
		case 60:
			goto tr0
		case 62:
			goto tr0
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr0
				}
			case lex.data[(lex.p)] >= 9:
				goto tr0
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr0
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr0
				}
			default:
				goto tr0
			}
		default:
			goto tr0
		}
		goto tr1
	st1:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof1
		}
	st_case_1:
		switch lex.data[(lex.p)] {
		case 38:
			goto tr2
		case 124:
			goto tr3
		}
		goto tr1
	tr2:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st12
	st12:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof12
		}
	st_case_12:
//line qs_lexer.go:645
		switch lex.data[(lex.p)] {
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr3:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st13
	st13:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof13
		}
	st_case_13:
//line qs_lexer.go:695
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 123:
			goto tr46
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 125 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	st2:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof2
		}
	st_case_2:
		switch lex.data[(lex.p)] {
		case 34:
			goto tr5
		case 92:
			goto st3
		}
		goto st2
	st3:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof3
		}
	st_case_3:
		switch lex.data[(lex.p)] {
		case 34:
			goto tr7
		case 92:
			goto st3
		}
		goto st2
	tr7:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:147
		lex.act = 26
		goto st14
	st14:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof14
		}
	st_case_14:
//line qs_lexer.go:773
		switch lex.data[(lex.p)] {
		case 34:
			goto tr5
		case 92:
			goto st3
		}
		goto st2
	st4:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof4
		}
	st_case_4:
		if lex.data[(lex.p)] == 38 {
			goto tr8
		}
		goto st0
	st_case_0:
	st0:
		lex.cs = 0
		goto _out
	tr23:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:81
		lex.act = 13
		goto st15
	tr24:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:82
		lex.act = 14
		goto st15
	tr49:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:122
		lex.act = 22
		goto st15
	st15:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof15
		}
	st_case_15:
//line qs_lexer.go:820
		if lex.data[(lex.p)] == 46 {
			goto st5
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr49
		}
		goto tr0
	st5:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof5
		}
	st_case_5:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr10
		}
		goto tr0
	tr10:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:115
		lex.act = 21
		goto st16
	tr25:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:84
		lex.act = 16
		goto st16
	st16:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof16
		}
	st_case_16:
//line qs_lexer.go:856
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr10
		}
		goto tr0
	st6:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof6
		}
	st_case_6:
		switch lex.data[(lex.p)] {
		case 47:
			goto tr12
		case 92:
			goto st7
		}
		goto st6
	st7:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof7
		}
	st_case_7:
		switch lex.data[(lex.p)] {
		case 47:
			goto tr14
		case 92:
			goto st7
		}
		goto st6
	tr14:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:155
		lex.act = 27
		goto st17
	st17:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof17
		}
	st_case_17:
//line qs_lexer.go:897
		switch lex.data[(lex.p)] {
		case 47:
			goto tr12
		case 92:
			goto st7
		}
		goto st6
	tr26:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:122
		lex.act = 22
		goto st18
	st18:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof18
		}
	st_case_18:
//line qs_lexer.go:917
		switch lex.data[(lex.p)] {
		case 38:
			goto tr51
		case 46:
			goto st5
		case 47:
			goto tr51
		case 58:
			goto tr51
		case 60:
			goto tr51
		case 62:
			goto tr51
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr51
				}
			case lex.data[(lex.p)] >= 9:
				goto tr51
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
					goto tr26
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr51
				}
			default:
				goto tr51
			}
		default:
			goto tr51
		}
		goto tr1
	st19:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof19
		}
	st_case_19:
		if lex.data[(lex.p)] == 61 {
			goto tr53
		}
		goto tr52
	tr30:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st20
	st20:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof20
		}
	st_case_20:
//line qs_lexer.go:982
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 78:
			goto tr54
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr54:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st21
	st21:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof21
		}
	st_case_21:
//line qs_lexer.go:1036
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 68:
			goto tr55
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr31:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st22
	st22:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof22
		}
	st_case_22:
//line qs_lexer.go:1090
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 65:
			goto tr56
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr56:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st23
	st23:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof23
		}
	st_case_23:
//line qs_lexer.go:1144
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 76:
			goto tr57
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr57:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st24
	st24:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof24
		}
	st_case_24:
//line qs_lexer.go:1198
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 83:
			goto tr58
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr58:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st25
	st25:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof25
		}
	st_case_25:
//line qs_lexer.go:1252
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 69:
			goto tr59
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr32:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st26
	st26:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof26
		}
	st_case_26:
//line qs_lexer.go:1306
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 79:
			goto tr60
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr60:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st27
	st27:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof27
		}
	st_case_27:
//line qs_lexer.go:1360
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 84:
			goto tr61
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr33:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st28
	st28:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof28
		}
	st_case_28:
//line qs_lexer.go:1414
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 82:
			goto tr62
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr34:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st29
	st29:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof29
		}
	st_case_29:
//line qs_lexer.go:1468
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 79:
			goto tr63
		case 82:
			goto tr64
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr64:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st30
	st30:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof30
		}
	st_case_30:
//line qs_lexer.go:1524
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 85:
			goto tr65
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr65:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st31
	st31:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof31
		}
	st_case_31:
//line qs_lexer.go:1578
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 69:
			goto tr66
		case 92:
			goto st1
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	st8:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof8
		}
	st_case_8:
		if lex.data[(lex.p)] == 46 {
			goto st9
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr16
		}
		goto st0
	st9:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof9
		}
	st_case_9:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st32
		}
		goto tr0
	st32:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof32
		}
	st_case_32:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st32
		}
		goto tr67
	tr16:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:96
		lex.act = 19
		goto st33
	st33:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof33
		}
	st_case_33:
//line qs_lexer.go:1662
		if lex.data[(lex.p)] == 46 {
			goto st9
		}
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto tr16
		}
		goto tr67
	tr39:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st34
	st34:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof34
		}
	st_case_34:
//line qs_lexer.go:1682
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 101:
			goto tr68
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr68:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st35
	st35:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof35
		}
	st_case_35:
//line qs_lexer.go:1736
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 120:
			goto tr69
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr69:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st36
	st36:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof36
		}
	st_case_36:
//line qs_lexer.go:1790
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 105:
			goto tr70
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr70:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st37
	st37:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof37
		}
	st_case_37:
//line qs_lexer.go:1844
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 115:
			goto tr71
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr71:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st38
	st38:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof38
		}
	st_case_38:
//line qs_lexer.go:1898
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 116:
			goto tr72
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr72:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st39
	st39:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof39
		}
	st_case_39:
//line qs_lexer.go:1952
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 115:
			goto tr73
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr73:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st40
	st40:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof40
		}
	st_case_40:
//line qs_lexer.go:2006
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 95:
			goto tr74
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr40:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st41
	st41:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof41
		}
	st_case_41:
//line qs_lexer.go:2060
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 97:
			goto tr75
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr75:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st42
	st42:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof42
		}
	st_case_42:
//line qs_lexer.go:2114
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 108:
			goto tr76
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr76:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st43
	st43:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof43
		}
	st_case_43:
//line qs_lexer.go:2168
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 115:
			goto tr77
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr77:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st44
	st44:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof44
		}
	st_case_44:
//line qs_lexer.go:2222
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 101:
			goto tr59
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr41:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st45
	st45:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof45
		}
	st_case_45:
//line qs_lexer.go:2276
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 114:
			goto tr78
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr78:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st46
	st46:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof46
		}
	st_case_46:
//line qs_lexer.go:2330
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 117:
			goto tr79
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	tr79:
//line NONE:1
		lex.te = (lex.p) + 1

//line qs_lexer.rl:141
		lex.act = 25
		goto st47
	st47:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof47
		}
	st_case_47:
//line qs_lexer.go:2384
		switch lex.data[(lex.p)] {
		case 38:
			goto tr46
		case 58:
			goto tr46
		case 60:
			goto tr46
		case 62:
			goto tr46
		case 92:
			goto st1
		case 101:
			goto tr66
		}
		switch {
		case lex.data[(lex.p)] < 40:
			switch {
			case lex.data[(lex.p)] > 13:
				if 32 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 34 {
					goto tr46
				}
			case lex.data[(lex.p)] >= 9:
				goto tr46
			}
		case lex.data[(lex.p)] > 41:
			switch {
			case lex.data[(lex.p)] < 91:
				if 46 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 47 {
					goto tr46
				}
			case lex.data[(lex.p)] > 94:
				if 123 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 126 {
					goto tr46
				}
			default:
				goto tr46
			}
		default:
			goto tr46
		}
		goto tr1
	st48:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof48
		}
	st_case_48:
		if lex.data[(lex.p)] == 124 {
			goto tr81
		}
		goto tr80
	st49:
		if (lex.p)++; (lex.p) == (lex.pe) {
			goto _test_eof49
		}
	st_case_49:
		if 48 <= lex.data[(lex.p)] && lex.data[(lex.p)] <= 57 {
			goto st49
		}
		goto tr82
	st_out:
	_test_eof10:
		lex.cs = 10
		goto _test_eof
	_test_eof11:
		lex.cs = 11
		goto _test_eof
	_test_eof1:
		lex.cs = 1
		goto _test_eof
	_test_eof12:
		lex.cs = 12
		goto _test_eof
	_test_eof13:
		lex.cs = 13
		goto _test_eof
	_test_eof2:
		lex.cs = 2
		goto _test_eof
	_test_eof3:
		lex.cs = 3
		goto _test_eof
	_test_eof14:
		lex.cs = 14
		goto _test_eof
	_test_eof4:
		lex.cs = 4
		goto _test_eof
	_test_eof15:
		lex.cs = 15
		goto _test_eof
	_test_eof5:
		lex.cs = 5
		goto _test_eof
	_test_eof16:
		lex.cs = 16
		goto _test_eof
	_test_eof6:
		lex.cs = 6
		goto _test_eof
	_test_eof7:
		lex.cs = 7
		goto _test_eof
	_test_eof17:
		lex.cs = 17
		goto _test_eof
	_test_eof18:
		lex.cs = 18
		goto _test_eof
	_test_eof19:
		lex.cs = 19
		goto _test_eof
	_test_eof20:
		lex.cs = 20
		goto _test_eof
	_test_eof21:
		lex.cs = 21
		goto _test_eof
	_test_eof22:
		lex.cs = 22
		goto _test_eof
	_test_eof23:
		lex.cs = 23
		goto _test_eof
	_test_eof24:
		lex.cs = 24
		goto _test_eof
	_test_eof25:
		lex.cs = 25
		goto _test_eof
	_test_eof26:
		lex.cs = 26
		goto _test_eof
	_test_eof27:
		lex.cs = 27
		goto _test_eof
	_test_eof28:
		lex.cs = 28
		goto _test_eof
	_test_eof29:
		lex.cs = 29
		goto _test_eof
	_test_eof30:
		lex.cs = 30
		goto _test_eof
	_test_eof31:
		lex.cs = 31
		goto _test_eof
	_test_eof8:
		lex.cs = 8
		goto _test_eof
	_test_eof9:
		lex.cs = 9
		goto _test_eof
	_test_eof32:
		lex.cs = 32
		goto _test_eof
	_test_eof33:
		lex.cs = 33
		goto _test_eof
	_test_eof34:
		lex.cs = 34
		goto _test_eof
	_test_eof35:
		lex.cs = 35
		goto _test_eof
	_test_eof36:
		lex.cs = 36
		goto _test_eof
	_test_eof37:
		lex.cs = 37
		goto _test_eof
	_test_eof38:
		lex.cs = 38
		goto _test_eof
	_test_eof39:
		lex.cs = 39
		goto _test_eof
	_test_eof40:
		lex.cs = 40
		goto _test_eof
	_test_eof41:
		lex.cs = 41
		goto _test_eof
	_test_eof42:
		lex.cs = 42
		goto _test_eof
	_test_eof43:
		lex.cs = 43
		goto _test_eof
	_test_eof44:
		lex.cs = 44
		goto _test_eof
	_test_eof45:
		lex.cs = 45
		goto _test_eof
	_test_eof46:
		lex.cs = 46
		goto _test_eof
	_test_eof47:
		lex.cs = 47
		goto _test_eof
	_test_eof48:
		lex.cs = 48
		goto _test_eof
	_test_eof49:
		lex.cs = 49
		goto _test_eof

	_test_eof:
		{
		}
		if (lex.p) == eof {
			switch lex.cs {
			case 11:
				goto tr0
			case 1:
				goto tr0
			case 12:
				goto tr46
			case 13:
				goto tr46
			case 2:
				goto tr0
			case 3:
				goto tr0
			case 14:
				goto tr47
			case 15:
				goto tr0
			case 5:
				goto tr0
			case 16:
				goto tr0
			case 6:
				goto tr0
			case 7:
				goto tr0
			case 17:
				goto tr50
			case 18:
				goto tr51
			case 19:
				goto tr52
			case 20:
				goto tr46
			case 21:
				goto tr46
			case 22:
				goto tr46
			case 23:
				goto tr46
			case 24:
				goto tr46
			case 25:
				goto tr46
			case 26:
				goto tr46
			case 27:
				goto tr46
			case 28:
				goto tr46
			case 29:
				goto tr46
			case 30:
				goto tr46
			case 31:
				goto tr46
			case 9:
				goto tr0
			case 32:
				goto tr67
			case 33:
				goto tr67
			case 34:
				goto tr46
			case 35:
				goto tr46
			case 36:
				goto tr46
			case 37:
				goto tr46
			case 38:
				goto tr46
			case 39:
				goto tr46
			case 40:
				goto tr46
			case 41:
				goto tr46
			case 42:
				goto tr46
			case 43:
				goto tr46
			case 44:
				goto tr46
			case 45:
				goto tr46
			case 46:
				goto tr46
			case 47:
				goto tr46
			case 48:
				goto tr80
			case 49:
				goto tr82
			}
		}

	_out:
		{
		}
	}

//line qs_lexer.rl:162

	return tok
}

func (lex *queryStringLexer) Error(e string) {
	fmt.Println("error:", e)
}

func (lex *queryStringLexer) token() string {
	return string(lex.data[lex.ts:lex.te])
}

func (lex *queryStringLexer) tokenStripped(a, b int) string {
	return string(lex.data[lex.ts+a : lex.te-b])
}
