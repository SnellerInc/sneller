package vm

// Code generated automatically; DO NOT EDIT

var generated = [_maxbcop]bcopinfo{
	opbroadcasti64:            {text: "broadcast.i64", in: str2bcarg("i"), out: str2bcarg("s")},
	opabsi64:                  {text: "abs.i64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opnegi64:                  {text: "neg.i64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opsigni64:                 {text: "sign.i64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opsquarei64:               {text: "square.i64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opbitnoti64:               {text: "bitnot.i64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opbitcounti64:             {text: "bitcount.i64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opbitcounti64_v2:          {text: "bitcount.i64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opaddi64:                  {text: "add.i64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opaddi64imm:               {text: "add.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opsubi64:                  {text: "sub.i64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opsubi64imm:               {text: "sub.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	oprsubi64imm:              {text: "rsub.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opmuli64:                  {text: "mul.i64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opmuli64imm:               {text: "mul.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opdivi64:                  {text: "div.i64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdivi64imm:               {text: "div.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	oprdivi64imm:              {text: "rdiv.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opmodi64:                  {text: "mod.i64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opmodi64imm:               {text: "mod.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	oprmodi64imm:              {text: "rmod.i64@imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opaddmuli64imm:            {text: "addmul.i64@imm", in: str2bcarg("ssik"), out: str2bcarg("sk")},
	opminvaluei64:             {text: "minvalue.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opminvaluei64imm:          {text: "minvalue.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opmaxvaluei64:             {text: "maxvalue.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opmaxvaluei64imm:          {text: "maxvalue.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opandi64:                  {text: "and.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opandi64imm:               {text: "and.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opori64:                   {text: "or.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opori64imm:                {text: "or.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opxori64:                  {text: "xor.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opxori64imm:               {text: "xor.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opslli64:                  {text: "sll.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opslli64imm:               {text: "sll.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opsrai64:                  {text: "sra.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opsrai64imm:               {text: "sra.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opsrli64:                  {text: "srl.i64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opsrli64imm:               {text: "srl.i64@imm", in: str2bcarg("sik"), out: str2bcarg("s")},
	opbroadcastf64:            {text: "broadcast.f64", in: str2bcarg("f"), out: str2bcarg("s")},
	opabsf64:                  {text: "abs.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opnegf64:                  {text: "neg.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opsignf64:                 {text: "sign.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opsquaref64:               {text: "square.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	oproundf64:                {text: "round.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	oproundevenf64:            {text: "roundeven.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	optruncf64:                {text: "trunc.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opfloorf64:                {text: "floor.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opceilf64:                 {text: "ceil.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opaddf64:                  {text: "add.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opaddf64imm:               {text: "add.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	opsubf64:                  {text: "sub.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opsubf64imm:               {text: "sub.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	oprsubf64imm:              {text: "rsub.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	opmulf64:                  {text: "mul.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opmulf64imm:               {text: "mul.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	opdivf64:                  {text: "div.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdivf64imm:               {text: "div.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	oprdivf64imm:              {text: "rdiv.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	opmodf64:                  {text: "mod.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opmodf64imm:               {text: "mod.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	oprmodf64imm:              {text: "rmod.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("sk")},
	opminvaluef64:             {text: "minvalue.f64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opminvaluef64imm:          {text: "minvalue.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("s")},
	opmaxvaluef64:             {text: "maxvalue.f64", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opmaxvaluef64imm:          {text: "maxvalue.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("s")},
	opsqrtf64:                 {text: "sqrt.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcbrtf64:                 {text: "cbrt.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opexpf64:                  {text: "exp.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opexp2f64:                 {text: "exp2.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opexp10f64:                {text: "exp10.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opexpm1f64:                {text: "expm1.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	oplnf64:                   {text: "ln.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opln1pf64:                 {text: "ln1p.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	oplog2f64:                 {text: "log2.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	oplog10f64:                {text: "log10.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opsinf64:                  {text: "sin.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcosf64:                  {text: "cos.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	optanf64:                  {text: "tan.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opasinf64:                 {text: "asin.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opacosf64:                 {text: "acos.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opatanf64:                 {text: "atan.f64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opatan2f64:                {text: "atan2.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	ophypotf64:                {text: "hypot.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	oppowf64:                  {text: "pow.f64", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	optrap:                    {text: "trap"},
	opret:                     {text: "ret"},
	opretk:                    {text: "ret.k", in: str2bcarg("k")},
	opretbk:                   {text: "ret.b.k", in: str2bcarg("bk")},
	opretsk:                   {text: "ret.s.k", in: str2bcarg("sk")},
	opretbhk:                  {text: "ret.b.h.k", in: str2bcarg("bhk")},
	opinit:                    {text: "init", out: str2bcarg("bk")},
	opbroadcast0k:             {text: "broadcast0.k", out: str2bcarg("k")},
	opbroadcast1k:             {text: "broadcast1.k", out: str2bcarg("k")},
	opfalse:                   {text: "false.k", out: str2bcarg("vk")},
	opnotk:                    {text: "not.k", in: str2bcarg("k"), out: str2bcarg("k")},
	opandk:                    {text: "and.k", in: str2bcarg("kk"), out: str2bcarg("k")},
	opandnk:                   {text: "andn.k", in: str2bcarg("kk"), out: str2bcarg("k")},
	opork:                     {text: "or.k", in: str2bcarg("kk"), out: str2bcarg("k")},
	opxork:                    {text: "xor.k", in: str2bcarg("kk"), out: str2bcarg("k")},
	opxnork:                   {text: "xnor.k", in: str2bcarg("kk"), out: str2bcarg("k")},
	opcvtktof64:               {text: "cvt.ktof64", in: str2bcarg("k"), out: str2bcarg("s")},
	opcvtktoi64:               {text: "cvt.ktoi64", in: str2bcarg("k"), out: str2bcarg("s")},
	opcvti64tok:               {text: "cvt.i64tok", in: str2bcarg("sk"), out: str2bcarg("k")},
	opcvtf64tok:               {text: "cvt.f64tok", in: str2bcarg("sk"), out: str2bcarg("k")},
	opcvti64tof64:             {text: "cvt.i64tof64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcvttruncf64toi64:        {text: "cvttrunc.f64toi64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcvtfloorf64toi64:        {text: "cvtfloor.f64toi64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcvtceilf64toi64:         {text: "cvtceil.f64toi64", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opcvti64tostr:             {text: "cvt.i64tostr", in: str2bcarg("sk"), out: str2bcarg("sk"), scratch: 20 * 16},
	opcmpv:                    {text: "cmpv", in: str2bcarg("vvk"), out: str2bcarg("sk")},
	opsortcmpvnf:              {text: "sortcmpv@nf", in: str2bcarg("vvk"), out: str2bcarg("sk")},
	opsortcmpvnl:              {text: "sortcmpv@nl", in: str2bcarg("vvk"), out: str2bcarg("sk")},
	opcmpvk:                   {text: "cmpv.k", in: str2bcarg("vkk"), out: str2bcarg("sk")},
	opcmpvkimm:                {text: "cmpv.k@imm", in: str2bcarg("v2k"), out: str2bcarg("sk")},
	opcmpvi64:                 {text: "cmpv.i64", in: str2bcarg("vsk"), out: str2bcarg("sk")},
	opcmpvi64imm:              {text: "cmpv.i64@imm", in: str2bcarg("vik"), out: str2bcarg("sk")},
	opcmpvf64:                 {text: "cmpv.f64", in: str2bcarg("vsk"), out: str2bcarg("sk")},
	opcmpvf64imm:              {text: "cmpv.f64@imm", in: str2bcarg("vfk"), out: str2bcarg("sk")},
	opcmpltstr:                {text: "cmplt.str", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmplestr:                {text: "cmple.str", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgtstr:                {text: "cmpgt.str", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgestr:                {text: "cmpge.str", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpltk:                  {text: "cmplt.k", in: str2bcarg("kkk"), out: str2bcarg("k")},
	opcmpltkimm:               {text: "cmplt.k@imm", in: str2bcarg("k2k"), out: str2bcarg("k")},
	opcmplek:                  {text: "cmple.k", in: str2bcarg("kkk"), out: str2bcarg("k")},
	opcmplekimm:               {text: "cmple.k@imm", in: str2bcarg("k2k"), out: str2bcarg("k")},
	opcmpgtk:                  {text: "cmpgt.k", in: str2bcarg("kkk"), out: str2bcarg("k")},
	opcmpgtkimm:               {text: "cmpgt.k@imm", in: str2bcarg("k2k"), out: str2bcarg("k")},
	opcmpgek:                  {text: "cmpge.k", in: str2bcarg("kkk"), out: str2bcarg("k")},
	opcmpgekimm:               {text: "cmpge.k@imm", in: str2bcarg("k2k"), out: str2bcarg("k")},
	opcmpeqf64:                {text: "cmpeq.f64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpeqf64imm:             {text: "cmpeq.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("k")},
	opcmpltf64:                {text: "cmplt.f64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpltf64imm:             {text: "cmplt.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("k")},
	opcmplef64:                {text: "cmple.f64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmplef64imm:             {text: "cmple.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("k")},
	opcmpgtf64:                {text: "cmpgt.f64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgtf64imm:             {text: "cmpgt.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("k")},
	opcmpgef64:                {text: "cmpge.f64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgef64imm:             {text: "cmpge.f64@imm", in: str2bcarg("sfk"), out: str2bcarg("k")},
	opcmpeqi64:                {text: "cmpeq.i64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpeqi64imm:             {text: "cmpeq.i64@imm", in: str2bcarg("sik"), out: str2bcarg("k")},
	opcmplti64:                {text: "cmplt.i64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmplti64imm:             {text: "cmplt.i64@imm", in: str2bcarg("sik"), out: str2bcarg("k")},
	opcmplei64:                {text: "cmple.i64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmplei64imm:             {text: "cmple.i64@imm", in: str2bcarg("sik"), out: str2bcarg("k")},
	opcmpgti64:                {text: "cmpgt.i64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgti64imm:             {text: "cmpgt.i64@imm", in: str2bcarg("sik"), out: str2bcarg("k")},
	opcmpgei64:                {text: "cmpge.i64", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpgei64imm:             {text: "cmpge.i64@imm", in: str2bcarg("sik"), out: str2bcarg("k")},
	opisnanf:                  {text: "isnan.f", in: str2bcarg("sk"), out: str2bcarg("k")},
	opchecktag:                {text: "checktag", in: str2bcarg("v2k"), out: str2bcarg("vk")},
	optypebits:                {text: "typebits", in: str2bcarg("vk"), out: str2bcarg("s")},
	opisnullv:                 {text: "isnull.v", in: str2bcarg("vk"), out: str2bcarg("k")},
	opisnotnullv:              {text: "isnotnull.v", in: str2bcarg("vk"), out: str2bcarg("k")},
	opistruev:                 {text: "istrue.v", in: str2bcarg("vk"), out: str2bcarg("k")},
	opisfalsev:                {text: "isfalse.v", in: str2bcarg("vk"), out: str2bcarg("k")},
	opcmpeqslice:              {text: "cmpeq.slice", in: str2bcarg("ssk"), out: str2bcarg("k")},
	opcmpeqv:                  {text: "cmpeq.v", in: str2bcarg("vvk"), out: str2bcarg("k")},
	opcmpeqvimm:               {text: "cmpeq.v@imm", in: str2bcarg("vdk"), out: str2bcarg("k")},
	opdateaddmonth:            {text: "dateaddmonth", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdateaddmonthimm:         {text: "dateaddmonth.imm", in: str2bcarg("sik"), out: str2bcarg("sk")},
	opdateaddyear:             {text: "dateaddyear", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdateaddquarter:          {text: "dateaddquarter", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdatediffmicrosecond:     {text: "datediffmicrosecond", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opdatediffparam:           {text: "datediffparam", in: str2bcarg("ss8k"), out: str2bcarg("sk")},
	opdatediffmqy:             {text: "datediffmqy", in: str2bcarg("ss2k"), out: str2bcarg("sk")},
	opdateextractmicrosecond:  {text: "dateextractmicrosecond", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractmillisecond:  {text: "dateextractmillisecond", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractsecond:       {text: "dateextractsecond", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractminute:       {text: "dateextractminute", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextracthour:         {text: "dateextracthour", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractday:          {text: "dateextractday", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractdow:          {text: "dateextractdow", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractdoy:          {text: "dateextractdoy", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractmonth:        {text: "dateextractmonth", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractquarter:      {text: "dateextractquarter", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdateextractyear:         {text: "dateextractyear", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetounixepoch:         {text: "datetounixepoch", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetounixmicro:         {text: "datetounixmicro", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncmillisecond:    {text: "datetruncmillisecond", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncsecond:         {text: "datetruncsecond", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncminute:         {text: "datetruncminute", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetrunchour:           {text: "datetrunchour", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncday:            {text: "datetruncday", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncdow:            {text: "datetruncdow", in: str2bcarg("s2k"), out: str2bcarg("s")},
	opdatetruncmonth:          {text: "datetruncmonth", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncquarter:        {text: "datetruncquarter", in: str2bcarg("sk"), out: str2bcarg("s")},
	opdatetruncyear:           {text: "datetruncyear", in: str2bcarg("sk"), out: str2bcarg("s")},
	opunboxts:                 {text: "unboxts", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opboxts:                   {text: "boxts", in: str2bcarg("sk"), out: str2bcarg("v"), scratch: 16 * 16},
	opwidthbucketf64:          {text: "widthbucket.f64", in: str2bcarg("ssssk"), out: str2bcarg("s")},
	opwidthbucketi64:          {text: "widthbucket.i64", in: str2bcarg("ssssk"), out: str2bcarg("s")},
	optimebucketts:            {text: "timebucket.ts", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opgeohash:                 {text: "geohash", in: str2bcarg("sssk"), out: str2bcarg("s"), scratch: 16 * 16},
	opgeohashimm:              {text: "geohashimm", in: str2bcarg("ss2k"), out: str2bcarg("s"), scratch: 16 * 16},
	opgeotilex:                {text: "geotilex", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opgeotiley:                {text: "geotiley", in: str2bcarg("ssk"), out: str2bcarg("s")},
	opgeotilees:               {text: "geotilees", in: str2bcarg("sssk"), out: str2bcarg("s"), scratch: 32 * 16},
	opgeotileesimm:            {text: "geotilees.imm", in: str2bcarg("ss2k"), out: str2bcarg("s"), scratch: 32 * 16},
	opgeodistance:             {text: "geodistance", in: str2bcarg("ssssk"), out: str2bcarg("sk")},
	opalloc:                   {text: "alloc", in: str2bcarg("sk"), out: str2bcarg("sk"), scratch: PageSize},
	opconcatstr:               {text: "concatstr", out: str2bcarg("sk"), va: str2bcarg("sk"), scratch: PageSize},
	opfindsym:                 {text: "findsym", in: str2bcarg("byk"), out: str2bcarg("vk")},
	opfindsym2:                {text: "findsym2", in: str2bcarg("bvkyk"), out: str2bcarg("vk")},
	opblendv:                  {text: "blend.v", in: str2bcarg("vkvk"), out: str2bcarg("vk")},
	opblendf64:                {text: "blend.f64", in: str2bcarg("sksk"), out: str2bcarg("sk")},
	opunpack:                  {text: "unpack", in: str2bcarg("v2k"), out: str2bcarg("sk")},
	opunsymbolize:             {text: "unsymbolize", in: str2bcarg("vk"), out: str2bcarg("v")},
	opunboxktoi64:             {text: "unbox.k@i64", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opunboxcoercef64:          {text: "unbox.coerce.f64", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opunboxcoercei64:          {text: "unbox.coerce.i64", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opunboxcvtf64:             {text: "unbox.cvt.f64", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opunboxcvti64:             {text: "unbox.cvt.i64", in: str2bcarg("vk"), out: str2bcarg("sk")},
	opboxf64:                  {text: "box.f64", in: str2bcarg("sk"), out: str2bcarg("v"), scratch: 9 * 16},
	opboxi64:                  {text: "box.i64", in: str2bcarg("sk"), out: str2bcarg("v"), scratch: 9 * 16},
	opboxk:                    {text: "box.k", in: str2bcarg("kk"), out: str2bcarg("v"), scratch: 16},
	opboxstr:                  {text: "box.str", in: str2bcarg("sk"), out: str2bcarg("v"), scratch: PageSize},
	opboxlist:                 {text: "box.list", in: str2bcarg("sk"), out: str2bcarg("v"), scratch: PageSize},
	opmakelist:                {text: "makelist", in: str2bcarg("k"), out: str2bcarg("vk"), va: str2bcarg("vk"), scratch: PageSize},
	opmakestruct:              {text: "makestruct", in: str2bcarg("k"), out: str2bcarg("vk"), va: str2bcarg("yvk"), scratch: PageSize},
	ophashvalue:               {text: "hashvalue", in: str2bcarg("vk"), out: str2bcarg("h")},
	ophashvalueplus:           {text: "hashvalue+", in: str2bcarg("hvk"), out: str2bcarg("h")},
	ophashmember:              {text: "hashmember", in: str2bcarg("h2k"), out: str2bcarg("k")},
	ophashlookup:              {text: "hashlookup", in: str2bcarg("h2k"), out: str2bcarg("vk")},
	opaggandk:                 {text: "aggand.k", in: str2bcarg("akk")},
	opaggork:                  {text: "aggor.k", in: str2bcarg("akk")},
	opaggslotsumf:             {text: "aggslotsum.f64", in: str2bcarg("alsk")},
	opaggsumf:                 {text: "aggsum.f64", in: str2bcarg("ask")},
	opaggsumi:                 {text: "aggsum.i64", in: str2bcarg("ask")},
	opaggminf:                 {text: "aggmin.f64", in: str2bcarg("ask")},
	opaggmini:                 {text: "aggmin.i64", in: str2bcarg("ask")},
	opaggmaxf:                 {text: "aggmax.f64", in: str2bcarg("ask")},
	opaggmaxi:                 {text: "aggmax.i64", in: str2bcarg("ask")},
	opaggandi:                 {text: "aggand.i64", in: str2bcarg("ask")},
	opaggori:                  {text: "aggor.i64", in: str2bcarg("ask")},
	opaggxori:                 {text: "aggxor.i64", in: str2bcarg("ask")},
	opaggcount:                {text: "aggcount", in: str2bcarg("ak")},
	opaggbucket:               {text: "aggbucket", in: str2bcarg("hk"), out: str2bcarg("l")},
	opaggslotandk:             {text: "aggslotand.k", in: str2bcarg("alkk")},
	opaggslotork:              {text: "aggslotor.k", in: str2bcarg("alkk")},
	opaggslotsumi:             {text: "aggslotsum.i64", in: str2bcarg("alsk")},
	opaggslotavgf:             {text: "aggslotavg.f64", in: str2bcarg("alsk")},
	opaggslotavgi:             {text: "aggslotavg.i64", in: str2bcarg("alsk")},
	opaggslotminf:             {text: "aggslotmin.f64", in: str2bcarg("alsk")},
	opaggslotmini:             {text: "aggslotmin.i64", in: str2bcarg("alsk")},
	opaggslotmaxf:             {text: "aggslotmax.f64", in: str2bcarg("alsk")},
	opaggslotmaxi:             {text: "aggslotmax.i64", in: str2bcarg("alsk")},
	opaggslotandi:             {text: "aggslotand.i64", in: str2bcarg("alsk")},
	opaggslotori:              {text: "aggslotor.i64", in: str2bcarg("alsk")},
	opaggslotxori:             {text: "aggslotxor.i64", in: str2bcarg("alsk")},
	opaggslotcount:            {text: "aggslotcount", in: str2bcarg("alk")},
	opaggslotcount_v2:         {text: "aggslotcount", in: str2bcarg("alk")},
	oplitref:                  {text: "litref", in: str2bcarg("d"), out: str2bcarg("v")},
	opauxval:                  {text: "auxval", in: str2bcarg("p"), out: str2bcarg("vk")},
	opsplit:                   {text: "split", in: str2bcarg("sk"), out: str2bcarg("vsk")},
	optuple:                   {text: "tuple", in: str2bcarg("vk"), out: str2bcarg("bk")},
	opmovk:                    {text: "mov.k", in: str2bcarg("k"), out: str2bcarg("k")},
	opzerov:                   {text: "zero.v", out: str2bcarg("v")},
	opmovv:                    {text: "mov.v", in: str2bcarg("vk"), out: str2bcarg("v")},
	opmovvk:                   {text: "mov.v.k", in: str2bcarg("vk"), out: str2bcarg("vk")},
	opmovf64:                  {text: "mov.f64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opmovi64:                  {text: "mov.i64", in: str2bcarg("sk"), out: str2bcarg("s")},
	opobjectsize:              {text: "objectsize", in: str2bcarg("vk"), out: str2bcarg("sk")},
	oparraysize:               {text: "arraysize", in: str2bcarg("sk"), out: str2bcarg("s")},
	oparrayposition:           {text: "arrayposition", in: str2bcarg("svk"), out: str2bcarg("sk")},
	opCmpStrEqCs:              {text: "cmp_str_eq_cs", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opCmpStrEqCi:              {text: "cmp_str_eq_ci", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opCmpStrEqUTF8Ci:          {text: "cmp_str_eq_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opCmpStrFuzzyA3:           {text: "cmp_str_fuzzy_A3", in: str2bcarg("ssxk"), out: str2bcarg("k")},
	opCmpStrFuzzyUnicodeA3:    {text: "cmp_str_fuzzy_unicode_A3", in: str2bcarg("ssxk"), out: str2bcarg("k")},
	opHasSubstrFuzzyA3:        {text: "contains_fuzzy_A3", in: str2bcarg("ssxk"), out: str2bcarg("k")},
	opHasSubstrFuzzyUnicodeA3: {text: "contains_fuzzy_unicode_A3", in: str2bcarg("ssxk"), out: str2bcarg("k")},
	opSkip1charLeft:           {text: "skip_1char_left", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opSkip1charRight:          {text: "skip_1char_right", in: str2bcarg("sk"), out: str2bcarg("sk")},
	opSkipNcharLeft:           {text: "skip_nchar_left", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opSkipNcharRight:          {text: "skip_nchar_right", in: str2bcarg("ssk"), out: str2bcarg("sk")},
	opTrimWsLeft:              {text: "trim_ws_left", in: str2bcarg("sk"), out: str2bcarg("s")},
	opTrimWsRight:             {text: "trim_ws_right", in: str2bcarg("sk"), out: str2bcarg("s")},
	opTrim4charLeft:           {text: "trim_char_left", in: str2bcarg("sxk"), out: str2bcarg("s")},
	opTrim4charRight:          {text: "trim_char_right", in: str2bcarg("sxk"), out: str2bcarg("s")},
	opoctetlength:             {text: "octetlength", in: str2bcarg("sk"), out: str2bcarg("s")},
	opcharlength:              {text: "characterlength", in: str2bcarg("sk"), out: str2bcarg("s")},
	opSubstr:                  {text: "substr", in: str2bcarg("sssk"), out: str2bcarg("s")},
	opSplitPart:               {text: "split_part", in: str2bcarg("sxsk"), out: str2bcarg("sk")},
	opContainsPrefixCs:        {text: "contains_prefix_cs", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsPrefixCi:        {text: "contains_prefix_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsPrefixUTF8Ci:    {text: "contains_prefix_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSuffixCs:        {text: "contains_suffix_cs", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSuffixCi:        {text: "contains_suffix_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSuffixUTF8Ci:    {text: "contains_suffix_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSubstrCs:        {text: "contains_substr_cs", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSubstrCi:        {text: "contains_substr_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsSubstrUTF8Ci:    {text: "contains_substr_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opEqPatternCs:             {text: "eq_pattern_cs", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opEqPatternCi:             {text: "eq_pattern_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opEqPatternUTF8Ci:         {text: "eq_pattern_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsPatternCs:       {text: "contains_pattern_cs", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsPatternCi:       {text: "contains_pattern_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opContainsPatternUTF8Ci:   {text: "contains_pattern_utf8_ci", in: str2bcarg("sxk"), out: str2bcarg("sk")},
	opIsSubnetOfIP4:           {text: "is_subnet_of_ip4", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT6:                   {text: "dfa_tiny6", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT7:                   {text: "dfa_tiny7", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT8:                   {text: "dfa_tiny8", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT6Z:                  {text: "dfa_tiny6Z", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT7Z:                  {text: "dfa_tiny7Z", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaT8Z:                  {text: "dfa_tiny8Z", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opDfaLZ:                   {text: "dfa_largeZ", in: str2bcarg("sxk"), out: str2bcarg("k")},
	opslower:                  {text: "slower", in: str2bcarg("sk"), out: str2bcarg("sk"), scratch: PageSize},
	opsupper:                  {text: "supper", in: str2bcarg("sk"), out: str2bcarg("sk"), scratch: PageSize},
	opaggapproxcount:          {text: "aggapproxcount", in: str2bcarg("ah2k")},
	opaggapproxcountmerge:     {text: "aggapproxcountmerge", in: str2bcarg("as2k")},
	opaggslotapproxcount:      {text: "aggslotapproxcount", in: str2bcarg("alh2k")},
	opaggslotapproxcountmerge: {text: "aggslotapproxcountmerge", in: str2bcarg("als2k")},
	oppowuintf64:              {text: "powuint.f64", in: str2bcarg("sik"), out: str2bcarg("s")},
}
